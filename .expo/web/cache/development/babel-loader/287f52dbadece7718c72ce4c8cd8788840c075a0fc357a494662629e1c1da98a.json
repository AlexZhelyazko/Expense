{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = AppNavigation;\nvar _native = require(\"@react-navigation/native\");\nvar _nativeStack = require(\"@react-navigation/native-stack\");\nvar _auth = require(\"firebase/auth\");\nvar _reactRedux = require(\"react-redux\");\nvar _firebase = require(\"../config/firebase\");\nvar _user = require(\"../redux/slices/user\");\nvar _AddExpenseScreen = _interopRequireDefault(require(\"../screens/AddExpenseScreen\"));\nvar _AddTripScreen = _interopRequireDefault(require(\"../screens/AddTripScreen\"));\nvar _HomeScreen = _interopRequireDefault(require(\"../screens/HomeScreen\"));\nvar _SignInScreen = _interopRequireDefault(require(\"../screens/SignInScreen\"));\nvar _SignUpScreen = _interopRequireDefault(require(\"../screens/SignUpScreen\"));\nvar _TripExpensesScreen = _interopRequireDefault(require(\"../screens/TripExpensesScreen\"));\nvar _WelcomScreen = _interopRequireDefault(require(\"../screens/WelcomScreen\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\VS-Code\\\\Expense\\\\navigation\\\\appNavigation.js\";\nvar Stack = (0, _nativeStack.createNativeStackNavigator)();\nfunction AppNavigation() {\n  var _useSelector = (0, _reactRedux.useSelector)(function (state) {\n      return state.user;\n    }),\n    user = _useSelector.user;\n  var dispatch = (0, _reactRedux.useDispatch)();\n  (0, _auth.onAuthStateChanged)(_firebase.auth, function (u) {\n    dispatch((0, _user.setUser)(u));\n  });\n  if (user) {\n    return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n      children: (0, _jsxRuntime.jsxs)(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        children: [(0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"Home\",\n          component: _HomeScreen.default\n        }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"AddTrip\",\n          component: _AddTripScreen.default\n        }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"AddExpense\",\n          component: _AddExpenseScreen.default\n        }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"TripExpenses\",\n          component: _TripExpensesScreen.default\n        })]\n      })\n    });\n  } else {\n    return (0, _jsxRuntime.jsx)(_native.NavigationContainer, {\n      children: (0, _jsxRuntime.jsxs)(Stack.Navigator, {\n        initialRouteName: \"Welcome\",\n        children: [(0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false,\n            presentation: 'modal'\n          },\n          name: \"SignIn\",\n          component: _SignInScreen.default\n        }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false,\n            presentation: 'modal'\n          },\n          name: \"SignUp\",\n          component: _SignUpScreen.default\n        }), (0, _jsxRuntime.jsx)(Stack.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"Welcome\",\n          component: _WelcomScreen.default\n        })]\n      })\n    });\n  }\n}","map":{"version":3,"names":["Stack","createNativeStackNavigator","AppNavigation","useSelector","state","user","dispatch","useDispatch","onAuthStateChanged","auth","u","setUser","headerShown","HomeScreen","AddTripScreen","AddExpenseScreen","TripExpensesScreen","presentation","SignInScreen","SignUpScreen","WelcomScreen"],"sources":["C:/VS-Code/Expense/navigation/appNavigation.js"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { auth } from '../config/firebase';\nimport { setUser } from '../redux/slices/user';\nimport AddExpenseScreen from '../screens/AddExpenseScreen';\nimport AddTripScreen from '../screens/AddTripScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport SignInScreen from '../screens/SignInScreen';\nimport SignUpScreen from '../screens/SignUpScreen';\nimport TripExpensesScreen from '../screens/TripExpensesScreen';\nimport WelcomScreen from '../screens/WelcomScreen';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function AppNavigation() {\n    const {user} = useSelector(state=> state.user);\n\n    const dispatch = useDispatch();\n\n    onAuthStateChanged(auth, u=>{\n        // console.log('got user: ',u);\n        dispatch(setUser(u));\n    })\n\n    if(user){\n        return (\n            <NavigationContainer>\n                <Stack.Navigator initialRouteName=\"Home\">\n                    <Stack.Screen options={{headerShown: false}} name=\"Home\" component={HomeScreen} />\n                    <Stack.Screen options={{headerShown: false}} name=\"AddTrip\" component={AddTripScreen} />\n                    <Stack.Screen options={{headerShown: false}} name=\"AddExpense\" component={AddExpenseScreen} />\n                    <Stack.Screen options={{headerShown: false}} name=\"TripExpenses\" component={TripExpensesScreen} />\n                </Stack.Navigator>\n            </NavigationContainer>\n        );\n    }else{\n        return (\n            <NavigationContainer >\n                <Stack.Navigator initialRouteName=\"Welcome\">\n                    <Stack.Screen options={{headerShown: false, presentation: 'modal'}} name=\"SignIn\" component={SignInScreen} />\n                    <Stack.Screen options={{headerShown: false, presentation: 'modal'}} name=\"SignUp\" component={SignUpScreen} />\n                    <Stack.Screen options={{headerShown: false}} name=\"Welcome\" component={WelcomScreen} />\n                </Stack.Navigator>\n            </NavigationContainer>\n        );\n    }\n    \n  }"],"mappings":";;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAmD;AAAA;AAEnD,IAAMA,KAAK,GAAG,IAAAC,uCAA0B,GAAE;AAE3B,SAASC,aAAa,GAAG;EACpC,mBAAe,IAAAC,uBAAW,EAAC,UAAAC,KAAK;MAAA,OAAGA,KAAK,CAACC,IAAI;IAAA,EAAC;IAAvCA,IAAI,gBAAJA,IAAI;EAEX,IAAMC,QAAQ,GAAG,IAAAC,uBAAW,GAAE;EAE9B,IAAAC,wBAAkB,EAACC,cAAI,EAAE,UAAAC,CAAC,EAAE;IAExBJ,QAAQ,CAAC,IAAAK,aAAO,EAACD,CAAC,CAAC,CAAC;EACxB,CAAC,CAAC;EAEF,IAAGL,IAAI,EAAC;IACJ,OACI,qBAAC,2BAAmB;MAAA,UAChB,sBAAC,KAAK,CAAC,SAAS;QAAC,gBAAgB,EAAC,MAAM;QAAA,WACpC,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACO,WAAW,EAAE;UAAK,CAAE;UAAC,IAAI,EAAC,MAAM;UAAC,SAAS,EAAEC;QAAW,EAAG,EAClF,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACD,WAAW,EAAE;UAAK,CAAE;UAAC,IAAI,EAAC,SAAS;UAAC,SAAS,EAAEE;QAAc,EAAG,EACxF,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACF,WAAW,EAAE;UAAK,CAAE;UAAC,IAAI,EAAC,YAAY;UAAC,SAAS,EAAEG;QAAiB,EAAG,EAC9F,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACH,WAAW,EAAE;UAAK,CAAE;UAAC,IAAI,EAAC,cAAc;UAAC,SAAS,EAAEI;QAAmB,EAAG;MAAA;IACpF,EACA;EAE9B,CAAC,MAAI;IACD,OACI,qBAAC,2BAAmB;MAAA,UAChB,sBAAC,KAAK,CAAC,SAAS;QAAC,gBAAgB,EAAC,SAAS;QAAA,WACvC,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACJ,WAAW,EAAE,KAAK;YAAEK,YAAY,EAAE;UAAO,CAAE;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEC;QAAa,EAAG,EAC7G,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACN,WAAW,EAAE,KAAK;YAAEK,YAAY,EAAE;UAAO,CAAE;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEE;QAAa,EAAG,EAC7G,qBAAC,KAAK,CAAC,MAAM;UAAC,OAAO,EAAE;YAACP,WAAW,EAAE;UAAK,CAAE;UAAC,IAAI,EAAC,SAAS;UAAC,SAAS,EAAEQ;QAAa,EAAG;MAAA;IACzE,EACA;EAE9B;AAEF"},"metadata":{},"sourceType":"script","externalDependencies":[]}