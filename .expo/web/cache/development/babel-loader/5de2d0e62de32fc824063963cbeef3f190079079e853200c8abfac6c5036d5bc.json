{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _core = require(\"@react-navigation/core\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _LinkingContext = _interopRequireDefault(require(\"./LinkingContext\"));\nvar _DefaultTheme = _interopRequireDefault(require(\"./theming/DefaultTheme\"));\nvar _ThemeProvider = _interopRequireDefault(require(\"./theming/ThemeProvider\"));\nvar _useBackButton = _interopRequireDefault(require(\"./useBackButton\"));\nvar _useDocumentTitle = _interopRequireDefault(require(\"./useDocumentTitle\"));\nvar _useLinking2 = _interopRequireDefault(require(\"./useLinking\"));\nvar _useThenable3 = _interopRequireDefault(require(\"./useThenable\"));\nvar _excluded = [\"theme\", \"linking\", \"fallback\", \"documentTitle\", \"onReady\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\nfunction NavigationContainerInner(_ref, ref) {\n  var _ref$theme = _ref.theme,\n    theme = _ref$theme === void 0 ? _DefaultTheme.default : _ref$theme,\n    linking = _ref.linking,\n    _ref$fallback = _ref.fallback,\n    fallback = _ref$fallback === void 0 ? null : _ref$fallback,\n    documentTitle = _ref.documentTitle,\n    onReady = _ref.onReady,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isLinkingEnabled = linking ? linking.enabled !== false : false;\n  if (linking !== null && linking !== void 0 && linking.config) {\n    (0, _core.validatePathConfig)(linking.config);\n  }\n  var refContainer = React.useRef(null);\n  (0, _useBackButton.default)(refContainer);\n  (0, _useDocumentTitle.default)(refContainer, documentTitle);\n  var _useLinking = (0, _useLinking2.default)(refContainer, Object.assign({\n      independent: rest.independent,\n      enabled: isLinkingEnabled,\n      prefixes: []\n    }, linking)),\n    getInitialState = _useLinking.getInitialState;\n  React.useEffect(function () {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          var _ref2, _ref3, _ref4, _ref5;\n          return Object.assign({}, linking, {\n            enabled: isLinkingEnabled,\n            prefixes: (_ref2 = linking === null || linking === void 0 ? void 0 : linking.prefixes) != null ? _ref2 : [],\n            getStateFromPath: (_ref3 = linking === null || linking === void 0 ? void 0 : linking.getStateFromPath) != null ? _ref3 : _core.getStateFromPath,\n            getPathFromState: (_ref4 = linking === null || linking === void 0 ? void 0 : linking.getPathFromState) != null ? _ref4 : _core.getPathFromState,\n            getActionFromState: (_ref5 = linking === null || linking === void 0 ? void 0 : linking.getActionFromState) != null ? _ref5 : _core.getActionFromState\n          });\n        }\n      });\n    }\n  });\n  var _useThenable = (0, _useThenable3.default)(getInitialState),\n    _useThenable2 = (0, _slicedToArray2.default)(_useThenable, 2),\n    isResolved = _useThenable2[0],\n    initialState = _useThenable2[1];\n  React.useImperativeHandle(ref, function () {\n    return refContainer.current;\n  });\n  var linkingContext = React.useMemo(function () {\n    return {\n      options: linking\n    };\n  }, [linking]);\n  var isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n  var onReadyRef = React.useRef(onReady);\n  React.useEffect(function () {\n    onReadyRef.current = onReady;\n  });\n  React.useEffect(function () {\n    if (isReady) {\n      var _onReadyRef$current;\n      (_onReadyRef$current = onReadyRef.current) === null || _onReadyRef$current === void 0 ? void 0 : _onReadyRef$current.call(onReadyRef);\n    }\n  }, [isReady]);\n  if (!isReady) {\n    return fallback;\n  }\n  return React.createElement(_LinkingContext.default.Provider, {\n    value: linkingContext\n  }, React.createElement(_ThemeProvider.default, {\n    value: theme\n  }, React.createElement(_core.BaseNavigationContainer, _extends({}, rest, {\n    initialState: rest.initialState == null ? initialState : rest.initialState,\n    ref: refContainer\n  }))));\n}\nvar NavigationContainer = React.forwardRef(NavigationContainerInner);\nvar _default = NavigationContainer;\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["global","REACT_NAVIGATION_DEVTOOLS","WeakMap","NavigationContainerInner","ref","_ref","theme","DefaultTheme","linking","fallback","documentTitle","onReady","rest","isLinkingEnabled","enabled","config","validatePathConfig","refContainer","React","useRef","useBackButton","useDocumentTitle","useLinking","independent","prefixes","getInitialState","useEffect","current","set","getStateFromPath","getPathFromState","getActionFromState","useThenable","isResolved","initialState","useImperativeHandle","linkingContext","useMemo","options","isReady","onReadyRef","_onReadyRef$current","LinkingContext","Provider","value","ThemeProvider","BaseNavigationContainer","NavigationContainer","forwardRef"],"sources":["C:\\VS-Code\\Expense\\node_modules\\@react-navigation\\native\\src\\NavigationContainer.tsx"],"sourcesContent":["import {\n  BaseNavigationContainer,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  NavigationContainerProps,\n  NavigationContainerRef,\n  ParamListBase,\n  validatePathConfig,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport LinkingContext from './LinkingContext';\nimport DefaultTheme from './theming/DefaultTheme';\nimport ThemeProvider from './theming/ThemeProvider';\nimport type { DocumentTitleOptions, LinkingOptions, Theme } from './types';\nimport useBackButton from './useBackButton';\nimport useDocumentTitle from './useDocumentTitle';\nimport useLinking from './useLinking';\nimport useThenable from './useThenable';\n\ndeclare global {\n  var REACT_NAVIGATION_DEVTOOLS: WeakMap<\n    NavigationContainerRef<any>,\n    { readonly linking: LinkingOptions<any> }\n  >;\n}\n\nglobal.REACT_NAVIGATION_DEVTOOLS = new WeakMap();\n\ntype Props<ParamList extends {}> = NavigationContainerProps & {\n  theme?: Theme;\n  linking?: LinkingOptions<ParamList>;\n  fallback?: React.ReactNode;\n  documentTitle?: DocumentTitleOptions;\n  onReady?: () => void;\n};\n\n/**\n * Container component which holds the navigation state designed for React Native apps.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree. When deep link handling is enabled, this will override deep links when specified. Make sure that you don't specify an `initialState` when there's a deep link (`Linking.getInitialURL()`).\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.theme Theme object for the navigators.\n * @param props.linking Options for deep linking. Deep link handling is enabled when this prop is provided, unless `linking.enabled` is `false`.\n * @param props.fallback Fallback component to render until we have finished getting initial state when linking is enabled. Defaults to `null`.\n * @param props.documentTitle Options to configure the document title on Web. Updating document title is handled by default unless `documentTitle.enabled` is `false`.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nfunction NavigationContainerInner(\n  {\n    theme = DefaultTheme,\n    linking,\n    fallback = null,\n    documentTitle,\n    onReady,\n    ...rest\n  }: Props<ParamListBase>,\n  ref?: React.Ref<NavigationContainerRef<ParamListBase> | null>\n) {\n  const isLinkingEnabled = linking ? linking.enabled !== false : false;\n\n  if (linking?.config) {\n    validatePathConfig(linking.config);\n  }\n\n  const refContainer =\n    React.useRef<NavigationContainerRef<ParamListBase>>(null);\n\n  useBackButton(refContainer);\n  useDocumentTitle(refContainer, documentTitle);\n\n  const { getInitialState } = useLinking(refContainer, {\n    independent: rest.independent,\n    enabled: isLinkingEnabled,\n    prefixes: [],\n    ...linking,\n  });\n\n  // Add additional linking related info to the ref\n  // This will be used by the devtools\n  React.useEffect(() => {\n    if (refContainer.current) {\n      REACT_NAVIGATION_DEVTOOLS.set(refContainer.current, {\n        get linking() {\n          return {\n            ...linking,\n            enabled: isLinkingEnabled,\n            prefixes: linking?.prefixes ?? [],\n            getStateFromPath: linking?.getStateFromPath ?? getStateFromPath,\n            getPathFromState: linking?.getPathFromState ?? getPathFromState,\n            getActionFromState:\n              linking?.getActionFromState ?? getActionFromState,\n          };\n        },\n      });\n    }\n  });\n\n  const [isResolved, initialState] = useThenable(getInitialState);\n\n  React.useImperativeHandle(ref, () => refContainer.current);\n\n  const linkingContext = React.useMemo(() => ({ options: linking }), [linking]);\n\n  const isReady = rest.initialState != null || !isLinkingEnabled || isResolved;\n\n  const onReadyRef = React.useRef(onReady);\n\n  React.useEffect(() => {\n    onReadyRef.current = onReady;\n  });\n\n  React.useEffect(() => {\n    if (isReady) {\n      onReadyRef.current?.();\n    }\n  }, [isReady]);\n\n  if (!isReady) {\n    // This is temporary until we have Suspense for data-fetching\n    // Then the fallback will be handled by a parent `Suspense` component\n    return fallback as React.ReactElement;\n  }\n\n  return (\n    <LinkingContext.Provider value={linkingContext}>\n      <ThemeProvider value={theme}>\n        <BaseNavigationContainer\n          {...rest}\n          initialState={\n            rest.initialState == null ? initialState : rest.initialState\n          }\n          ref={refContainer}\n        />\n      </ThemeProvider>\n    </LinkingContext.Provider>\n  );\n}\n\nconst NavigationContainer = React.forwardRef(NavigationContainerInner) as <\n  RootParamList extends {} = ReactNavigation.RootParamList\n>(\n  props: Props<RootParamList> & {\n    ref?: React.Ref<NavigationContainerRef<RootParamList>>;\n  }\n) => React.ReactElement;\n\nexport default NavigationContainer;\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}