{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GoogleSigninButton = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _RNGoogleSiginButton = require(\"./RNGoogleSiginButton\");\nvar _excluded = [\"style\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar RNGoogleSignin = _reactNative.NativeModules.RNGoogleSignin;\nvar GoogleSigninButton = function (_PureComponent) {\n  (0, _inherits2.default)(GoogleSigninButton, _PureComponent);\n  var _super = _createSuper(GoogleSigninButton);\n  function GoogleSigninButton() {\n    var _this;\n    (0, _classCallCheck2.default)(this, GoogleSigninButton);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"_clickListener\", void 0);\n    return _this;\n  }\n  (0, _createClass2.default)(GoogleSigninButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      if (_reactNative.Platform.OS === 'android') {\n        this._clickListener = _reactNative.DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', function () {\n          _this2.props.onPress && _this2.props.onPress();\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._clickListener && this._clickListener.remove();\n    }\n  }, {\n    key: \"getRecommendedSize\",\n    value: function getRecommendedSize() {\n      switch (this.props.size) {\n        case RNGoogleSignin.BUTTON_SIZE_ICON:\n          return styles.iconSize;\n        case RNGoogleSignin.BUTTON_SIZE_WIDE:\n          return styles.wideSize;\n        default:\n          return styles.standardSize;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        style = _this$props.style,\n        props = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n      return _react.default.createElement(_RNGoogleSiginButton.RNGoogleSigninButton, _extends({}, props, {\n        style: [this.getRecommendedSize(), style]\n      }));\n    }\n  }]);\n  return GoogleSigninButton;\n}(_react.PureComponent);\nexports.GoogleSigninButton = GoogleSigninButton;\n_defineProperty(GoogleSigninButton, \"Size\", {\n  Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n  Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  Wide: RNGoogleSignin.BUTTON_SIZE_WIDE\n});\n_defineProperty(GoogleSigninButton, \"Color\", {\n  Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n  Light: RNGoogleSignin.BUTTON_COLOR_LIGHT\n});\n_defineProperty(GoogleSigninButton, \"defaultProps\", {\n  size: RNGoogleSignin.BUTTON_SIZE_STANDARD\n});\nvar styles = _reactNative.StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48\n  },\n  standardSize: {\n    width: 230,\n    height: 48\n  },\n  wideSize: {\n    width: 312,\n    height: 48\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;AAAA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,cAAgC,GAAGC,0BAAa,CAACD,cAAvD;AAAA,IAUaE,kBAAN;EAAA;EAAA;EAAwE;IAAA;IAAA;IAAA;MAAAC;IAAA;IAAA;IAAAC;IAAA;EAAA;EAAA;IAAA;IAAA,OAkB7EC,6BAAoB;MAAA;MAClB,IAAIC,qBAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;QAC7B,KAAKC,cAAL,GAAsBC,+BAAkB,CAACC,WAAnB,CAA+B,6BAA/B,EAA8D,YAAM;UACxF,OAAKC,KAAL,CAAWC,OAAX,IAAsB,OAAKD,KAAL,CAAWC,OAAX,EAAtB;QACD,CAFqB,CAAtB;MAGD;IACF;EAAA;IAAA;IAAA,OAEDC,gCAAuB;MACrB,KAAKL,cAAL,IAAuB,KAAKA,cAAL,CAAoBM,MAApB,EAAvB;IACD;EAAA;IAAA;IAAA,OAEDC,8BAAqB;MACnB,QAAQ,KAAKJ,KAAL,CAAWK,IAAnB;QACE,KAAKhB,cAAc,CAACiB,gBAApB;UACE,OAAOC,MAAM,CAACC,QAAd;QACF,KAAKnB,cAAc,CAACoB,gBAApB;UACE,OAAOF,MAAM,CAACG,QAAd;QACF;UACE,OAAOH,MAAM,CAACI,YAAd;MAAA;IAEL;EAAA;IAAA;IAAA,OAEDC,kBAAS;MACP,kBAA4B,KAAKZ,KAAjC;QAAQa,KAAF,eAAEA,KAAF;QAAYb;MAGlB,OAAOc,6BAACC,yCAAD,eAA0Bf,KAA1B;QAAiCa,KAAK,EAAE,CAAC,KAAKT,kBAAL,EAAD,EAA4BS,KAA5B;MAAxC,GAAP;IACD;EAAA;EAAA;AAAA,EA9CqCG,oBAAjC;AAAA;gBAAMzB,kB,UAGG;EACZ0B,IAAI,EAAE5B,cAAc,CAACiB,gBADT;EAEZY,QAAQ,EAAE7B,cAAc,CAAC8B,oBAFb;EAGZC,IAAI,EAAE/B,cAAc,CAACoB;AAHT,C;gBAHHlB,kB,WASI;EACb8B,IAAI,EAAEhC,cAAc,CAACiC,iBADR;EAEbC,KAAK,EAAElC,cAAc,CAACmC;AAFT,C;gBATJjC,kB,kBAcW;EACpBc,IAAI,EAAEhB,cAAc,CAAC8B;AADD,C;AAoCxB,IAAMZ,MAAM,GAAGkB,uBAAU,CAACC,MAAX,CAAkB;EAC/BlB,QAAQ,EAAE;IACRmB,KAAK,EAAE,EADC;IAERC,MAAM,EAAE;EAFA,CADqB;EAK/BjB,YAAY,EAAE;IAAEgB,KAAK,EAAE,GAAT;IAAcC,MAAM,EAAE;EAAtB,CALiB;EAM/BlB,QAAQ,EAAE;IAAEiB,KAAK,EAAE,GAAT;IAAcC,MAAM,EAAE;EAAtB;AANqB,CAAlB,CAAf","names":["RNGoogleSignin","NativeModules","GoogleSigninButton","args","_defineProperty","componentDidMount","Platform","OS","_clickListener","DeviceEventEmitter","addListener","props","onPress","componentWillUnmount","remove","getRecommendedSize","size","BUTTON_SIZE_ICON","styles","iconSize","BUTTON_SIZE_WIDE","wideSize","standardSize","render","style","React","RNGoogleSigninButton","PureComponent","Icon","Standard","BUTTON_SIZE_STANDARD","Wide","Dark","BUTTON_COLOR_DARK","Light","BUTTON_COLOR_LIGHT","StyleSheet","create","width","height"],"sources":["C:\\VS-Code\\Expense\\node_modules\\@react-native-google-signin\\google-signin\\lib\\module\\GoogleSigninButton.tsx"],"sourcesContent":["import React, { PureComponent } from 'react';\n\nimport {\n  NativeModules,\n  Platform,\n  DeviceEventEmitter,\n  StyleSheet,\n  EmitterSubscription,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\nimport { RNGoogleSigninButton } from './RNGoogleSiginButton';\nimport type { RNGoogleSignType } from './types';\n\nconst RNGoogleSignin: RNGoogleSignType = NativeModules.RNGoogleSignin;\n\nexport interface GoogleSigninButtonProps extends ViewProps {\n  style?: StyleProp<ViewStyle>;\n  size?: 0 | 1 | 2;\n  color?: 0 | 1;\n  disabled?: boolean;\n  onPress?(): void;\n}\n\nexport class GoogleSigninButton extends PureComponent<GoogleSigninButtonProps> {\n  _clickListener?: EmitterSubscription;\n\n  static Size = {\n    Icon: RNGoogleSignin.BUTTON_SIZE_ICON,\n    Standard: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n    Wide: RNGoogleSignin.BUTTON_SIZE_WIDE,\n  };\n\n  static Color = {\n    Dark: RNGoogleSignin.BUTTON_COLOR_DARK,\n    Light: RNGoogleSignin.BUTTON_COLOR_LIGHT,\n  };\n\n  static defaultProps = {\n    size: RNGoogleSignin.BUTTON_SIZE_STANDARD,\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'android') {\n      this._clickListener = DeviceEventEmitter.addListener('RNGoogleSigninButtonClicked', () => {\n        this.props.onPress && this.props.onPress();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._clickListener && this._clickListener.remove();\n  }\n\n  getRecommendedSize() {\n    switch (this.props.size) {\n      case RNGoogleSignin.BUTTON_SIZE_ICON:\n        return styles.iconSize;\n      case RNGoogleSignin.BUTTON_SIZE_WIDE:\n        return styles.wideSize;\n      default:\n        return styles.standardSize;\n    }\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n\n    // @ts-ignore style prop incompatible\n    return <RNGoogleSigninButton {...props} style={[this.getRecommendedSize(), style]} />;\n  }\n}\n\n// sizes according to https://developers.google.com/identity/sign-in/ios/reference/Classes/GIDSignInButton\nconst styles = StyleSheet.create({\n  iconSize: {\n    width: 48,\n    height: 48,\n  },\n  standardSize: { width: 230, height: 48 },\n  wideSize: { width: 312, height: 48 },\n});\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}